packages <- lapply(packages, FUN = function(x) {
if(!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
packages <-
c(
"shiny",
"shinythemes",
"DT",
"stringr",
"tidyr",
"dplyr",
"purrr",
"lubridate",
"ggplot2",
"ggthemes",
"plotly"
)
packages <- lapply(packages, FUN = function(x) {
if(!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
packages <-
c(
"shiny",
"shinythemes",
"DT",
"stringr",
"tidyr",
"dplyr",
"purrr",
"lubridate",
"ggplot2",
"ggthemes",
"plotly"
"knitr",
packages <-
c(
"shiny",
"shinythemes",
"DT",
"stringr",
"tidyr",
"dplyr",
"purrr",
"lubridate",
"ggplot2",
"ggthemes",
"plotly",
"knitr",
"tidyverse",
"broom",
"DT",
"ggmap",
"ggthemes",
"maps",
"statebins",
"dplyr",
"readr",
"mapproj",
"RColorBrewer",
"stringr",
"scales",
"tidyverse",
"readxl",
"statebins",
"treemapify",
"RJSONIO",
"XML",
"RCurl",
"bindrcpp",
"tmap",
"rnaturalearth",
"sf",
"urbnmapr",
"leaflet",
"tools",
"ggplot2",
"htmlwidgets"
)
packages <- lapply(packages, FUN = function(x) {
if(!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
## Data Pre-processing
df_billboard <- read.csv("./Data/dataviz_nyc311.csv")
## Data Pre-processing
df <- read.csv("./Data/dataviz_nyc311.csv")
View(df)
unique(df$Complaint.type)
unique(df$complaint.type)
unique(df$Complaint.Type)
df <- df %>%
mutate(Complaint.type = case_when(
Complaint.type %in% c("Noise - Residential") ~ "Residential",
Complaint.type %in% c("Noise - Commercial") ~ "Commercial",
Complaint.type %in% c("Noise - Park") ~ "Park",
Complaint.type %in% c("Noise - Street/Sidewalk") ~ "Street/Sidewalk",
Complaint.type %in% c("Public Assembly") ~ "Public Assembly",
Complaint.type %in% c("Noise") ~ "Misc",
TRUE ~ "Misc"  # Any other category not listed above will be labeled as "Misc"
))
df <- df %>%
mutate(Complaint.Type = case_when(
Complaint.Type %in% c("Noise - Residential") ~ "Residential",
Complaint.Type %in% c("Noise - Commercial") ~ "Commercial",
Complaint.Type %in% c("Noise - Park") ~ "Park",
Complaint.Type %in% c("Noise - Street/Sidewalk") ~ "Street/Sidewalk",
Complaint.Type %in% c("Public Assembly") ~ "Public Assembly",
Complaint.Type %in% c("Noise") ~ "Misc",
TRUE ~ "Misc"  # Any other category not listed above will be labeled as "Misc"
))
write.csv(df.head(n=250), df.csv)
head(df, 5)
write.csv(head(df, 250), "df.csv")
runApp('JJYC_High_level')
## Data Pre-processing
df <- read.csv("./Data/dataviz_nyc311.csv")
runApp('JJYC_High_level')
shiny::runApp('JJYC_High_level')
runApp('JJYC_High_level')
wd
getwd()
## Data Pre-processing
df <- read.csv("./dataviz_nyc311.csv")
runApp('JJYC_High_level')
getwd()
runApp('~/GitHub/Chin_JaydonJunYu/Assignment 4/Top Artists.R')
runApp('C:/Users/jaydo/Desktop/GroupO_NYC311Complaints/JJYC_NYC.R')
testdata = read.csv("C:/Users/limre/Desktop/QMSS/Spring Semester/5063 Data Visualization/Data Viz Assignments/Final Group Project/updated_df_17_jun.csv",
row.names=NULL)
View(testdata)
unique(testdata$Complaint.Type)
sum(data$Complaint.Type=="Advocate-Property Value")
sum(testdata$Complaint.Type=="Advocate-Property Value")
sum(testdata$Complaint.Type=="Calorie Labeling")
sum(testdata$Complaint.Type=="Home Care Provider Complaint")
sum(testdata$Complaint.Type=="Advocate-Co-opCondo Abatement")
sum(testdata$Complaint.Type=="Window Guard")
sum(testdata$Complaint.Type=="For Hire Vehicle Report")
sum(testdata$Complaint.Type=="Food Establishment")
unique(testdata$Complaint.Type)
unique(testdata$Complaint.Type)[170:195]
sum(testdata$Complaint.Type=="Beach/Pool/Sauna Complaint")
unique(testdata$Complaint.Type)[151:195]
top_150=unique(testdata$Complaint.Type)[1:150]
data2 = testdata[testdata$Complaint.Type %in% top_150, ]
write.csv(data2,
file = "C:/Users/limre/Desktop/QMSS/Spring Semester/5063 Data Visualization/Data Viz Assignments/Final Group Project/smallest_data.csv",
row.names=FALSE)
top_150=unique(testdata$Complaint.Type)[1:100]
data2 = testdata[testdata$Complaint.Type %in% top_150, ]
write.csv(data2,
file = "C:/Users/limre/Desktop/QMSS/Spring Semester/5063 Data Visualization/Data Viz Assignments/Final Group Project/smallest_data.csv",
row.names=FALSE)
sum(testdata$Complaint.Type=="DOF Property - Update Account")
top_150=unique(testdata$Complaint.Type)[1:80]
data2 = testdata[testdata$Complaint.Type %in% top_150, ]
write.csv(data2,
file = "C:/Users/limre/Desktop/QMSS/Spring Semester/5063 Data Visualization/Data Viz Assignments/Final Group Project/smallest_data.csv",
row.names=FALSE)
top_150=unique(testdata$Complaint.Type)[1:50]
data2 = testdata[testdata$Complaint.Type %in% top_150, ]
write.csv(data2,
file = "C:/Users/limre/Desktop/QMSS/Spring Semester/5063 Data Visualization/Data Viz Assignments/Final Group Project/smallest_data.csv",
row.names=FALSE)
unique(data2$Complaint.Type)
write.csv(data2,
file = "C:/Users/limre/Desktop/QMSS/Spring Semester/5063 Data Visualization/Data Viz Assignments/Final Group Project/top_50complaints_data.csv",
row.names=FALSE)
data3 = testdata[c(TRUE, FALSE), ]
write.csv(data3,
file = "C:/Users/limre/Desktop/QMSS/Spring Semester/5063 Data Visualization/Data Viz Assignments/Final Group Project/oddrow_data.csv",
row.names=FALSE)
unique(data3$Complaint.Type)
